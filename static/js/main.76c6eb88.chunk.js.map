{"version":3,"sources":["pages/RegisterPage.js","Routes.js","App.js","registerServiceWorker.js","index.js","config.js","assets/images/banner_register.png"],"names":["Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","today","toTwoDigits","num","strDate","Date","day","getDate","month","parseInt","getMonth","year","getFullYear","toDay","RegisterPage","useState","isData","setIsData","userId","setUserID","userHN","setUserHN","userAN","setUserAN","userVN","setUserVN","userWeight","setUserWeight","userHeight","setUserHeight","userRegDate","setUserRegDate","userDchPlanDate","setUserDchPlanDate","userPhone","setUserPhone","userPreName","setUserPreName","userFirstName","setUserFirstName","userLastName","setUserLastName","userIDCard","setUserIDCard","userBedNumber","setUserBedNumber","dateAssessment","setDateAssessment","roundAssessment","setRoundAssessment","userSYS","setUserSYS","userDIA","setUserDIA","userPR","setUserPR","userEvaluationTemp","setUserEvaluationTemp","userEvaluationOxygen","setUserEvaluationOxygen","evaluationCough","setEvaluationCough","evaluationPhlegm","setEvaluationPhlegm","evaluationGasp","setEvaluationGasp","evaluationTaste","setEvaluationTaste","evaluationMuscle","setEvaluationMuscle","evaluationLiquid","setEvaluationLiquid","evaluationRash","setEvaluationRash","evaluationFever","setEvaluationFever","evaluationSnot","setEvaluationSnot","evaluationRedEye","setEvaluationRedEye","evaluationTired","setEvaluationTired","handleOnClickSearch","keyword","base_url","config","main_config","APP_URL","axios","get","headers","then","resp","status","data","length","map","val","pname","fname","lname","bedno","hn","an","vn","regdate","dchdate_plan","weight","height","phone","catch","error","indexOf","fire","title","text","icon","useEffect","liff","init","liffId","isLoggedIn","getProfile","profile","err","console","log","className","src","Banner","alt","style","marginTop","type","duration","md","borderRadius","onSubmit","event","preventDefault","target","formDataUser","user_id","cid","created_date","formDataUserEvaluation","evaluation_id","user_evaluation_date","user_evaluation_sys","user_evaluation_dia","user_evaluation_pr","user_evaluation_temp","user_evaluation_oxygen","user_evaluation_cough","user_evaluation_phlegm","user_evaluation_gasp","user_evaluation_taste","user_evaluation_muscle","user_evaluation_liquid","user_evaluation_rash","user_evaluation_fever","user_evaluation_snot","user_evaluation_redeye","user_evaluation_tired","post","res","status_code","msg","showDenyButton","showCancelButton","confirmButtonText","result","isConfirmed","JSON","stringify","placeholder","value","onKeyDown","e","keyCode","onChange","required","color","size","onClick","v","maxLength","name","id","for","checked","Routes","exact","path","component","render","React","Component","pkgVersion","require","version","App","state","collapseID","modal","localStorage","getItem","parse","isShow","isAdmin","toggleCollapse","setState","prevState","closeCollapse","collID","window","scrollTo","toggle","handleCheckBox","setItem","checkAdmin","location","removeItem","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","login","showValidationMessage","this","fluid","href","rel","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","fetch","response","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","exports","module"],"mappings":"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","file":"static/js/main.76c6eb88.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport config from \"../config\";\r\nimport liff from \"@line/liff\";\r\nimport Banner from \"../assets/images/banner_register.png\";\r\n\r\nimport {\r\n  MDBFreeBird,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBAnimation,\r\n  MDBBtn,\r\n} from \"mdbreact\";\r\n\r\nfunction toDay() {\r\n  const toTwoDigits = (num) => (num < 10 ? \"0\" + num : num);\r\n  let strDate = new Date();\r\n  let day = toTwoDigits(strDate.getDate());\r\n  let month = toTwoDigits(parseInt(strDate.getMonth()) + 1);\r\n  let year = strDate.getFullYear();\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n  toast: true,\r\n  position: \"top\",\r\n  showConfirmButton: false,\r\n  timer: 3000,\r\n  timerProgressBar: true,\r\n  didOpen: (toast) => {\r\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n  },\r\n});\r\n\r\nconst today = toDay();\r\n\r\nconst RegisterPage = () => {\r\n  const [isData, setIsData] = useState(false);\r\n  const [userId, setUserID] = useState(\"\");\r\n  const [userHN, setUserHN] = useState(\"\");\r\n  const [userAN, setUserAN] = useState(\"\");\r\n  const [userVN, setUserVN] = useState(\"\");\r\n  const [userWeight, setUserWeight] = useState(\"\");\r\n  const [userHeight, setUserHeight] = useState(\"\");\r\n  const [userRegDate, setUserRegDate] = useState(\"\");\r\n  const [userDchPlanDate, setUserDchPlanDate] = useState(\"\");\r\n  const [userPhone, setUserPhone] = useState(\"\");\r\n  const [userPreName, setUserPreName] = useState(\"\");\r\n  const [userFirstName, setUserFirstName] = useState(\"\");\r\n  const [userLastName, setUserLastName] = useState(\"\");\r\n  const [userIDCard, setUserIDCard] = useState(\"\");\r\n  const [userBedNumber, setUserBedNumber] = useState(\"\");\r\n  const [dateAssessment, setDateAssessment] = useState(today);\r\n  const [roundAssessment, setRoundAssessment] = useState(\"\");\r\n  const [userSYS, setUserSYS] = useState(\"\");\r\n  const [userDIA, setUserDIA] = useState(\"\");\r\n  const [userPR, setUserPR] = useState(\"\");\r\n  const [userEvaluationTemp, setUserEvaluationTemp] = useState(\"\");\r\n  const [userEvaluationOxygen, setUserEvaluationOxygen] = useState(\"\");\r\n  const [evaluationCough, setEvaluationCough] = useState(0);\r\n  const [evaluationPhlegm, setEvaluationPhlegm] = useState(0);\r\n  const [evaluationGasp, setEvaluationGasp] = useState(0);\r\n  const [evaluationTaste, setEvaluationTaste] = useState(0);\r\n  const [evaluationMuscle, setEvaluationMuscle] = useState(0);\r\n  const [evaluationLiquid, setEvaluationLiquid] = useState(0);\r\n  const [evaluationRash, setEvaluationRash] = useState(0);\r\n  const [evaluationFever, setEvaluationFever] = useState(0);\r\n  const [evaluationSnot, setEvaluationSnot] = useState(0);\r\n  const [evaluationRedEye, setEvaluationRedEye] = useState(0);\r\n  const [evaluationTired, setEvaluationTired] = useState(0);\r\n\r\n  const handleSearch = (event) => {\r\n    setUserIDCard(event.target.value);\r\n  };\r\n\r\n  const keyPress = (e) => {\r\n    if (e.keyCode === 13) {\r\n      handleOnClickSearch(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleOnClickSearch = (keyword) => {\r\n    if (keyword !== \"\") {\r\n      const base_url = `${config.main_config.APP_URL}/getUserByCID/${keyword}`;\r\n      // const base_url = `${config.main_config.APP_URL}/getPatientByCID/${keyword}`;\r\n      const header = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n      axios\r\n        .get(base_url, { headers: header })\r\n        .then((resp) => {\r\n          if (resp.status === 200) {\r\n            if (resp.data.data.length > 0) {\r\n              // console.log(resp.data.data);\r\n              resp.data.data.map((val) => {\r\n                setIsData(true);\r\n                setUserPreName(val.pname);\r\n                setUserFirstName(val.fname);\r\n                setUserLastName(val.lname);\r\n                setUserBedNumber(val.bedno);\r\n                setUserHN(val.hn);\r\n                setUserAN(val.an);\r\n                setUserVN(val.vn);\r\n                setUserRegDate(val.regdate);\r\n                setUserDchPlanDate(val.dchdate_plan);\r\n                setUserWeight(val.weight);\r\n                setUserHeight(val.height);\r\n                setUserPhone(val.phone);\r\n              });\r\n            } else {\r\n              const base_url = `${config.main_config.APP_URL}/getPatientByCID/${keyword}`;\r\n              const header = {\r\n                \"Content-Type\": \"application/json\",\r\n              };\r\n              axios\r\n                .get(base_url, { headers: header })\r\n                .then((resp) => {\r\n                  resp.data.data.map((val) => {\r\n                    setIsData(true);\r\n                    setUserPreName(val.pname);\r\n                    setUserFirstName(val.fname);\r\n                    setUserLastName(val.lname);\r\n                    setUserBedNumber(val.bedno);\r\n                    setUserHN(val.hn);\r\n                    setUserAN(val.an);\r\n                    setUserVN(val.vn);\r\n                    setUserRegDate(val.regdate);\r\n                    setUserDchPlanDate(val.dchdate_plan);\r\n                  });\r\n                })\r\n                .catch((error) => {\r\n                  const error_code = \"Network\";\r\n                  if ((\"\" + error).indexOf(error_code) > -1) {\r\n                    Swal.fire({\r\n                      title: \"Can't connect service!\",\r\n                      text: \"Please try again.\",\r\n                      icon: \"error\",\r\n                    });\r\n                  } else {\r\n                    Swal.fire({\r\n                      title: \"Error\",\r\n                      text: \"\" + error,\r\n                      icon: \"error\",\r\n                    });\r\n                  }\r\n                });\r\n              // setIsData(false);\r\n              // setUserBedNumber(\"\");\r\n              // Swal.fire({\r\n              //   title: \"ไม่พบข้อมูล!\",\r\n              //   text: \"กรุณากรอกเลขบัตรประชาชนให้ถูกต้อง\",\r\n              //   icon: \"error\",\r\n              // });\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          const error_code = \"Network\";\r\n          if ((\"\" + error).indexOf(error_code) > -1) {\r\n            Swal.fire({\r\n              title: \"Can't connect service!\",\r\n              text: \"Please try again.\",\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Error\",\r\n              text: \"\" + error,\r\n              icon: \"error\",\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (userPreName !== \"\") {\r\n      event.target.className += \" was-validated\";\r\n      let formDataUser = {\r\n        user_id: userId,\r\n        pname: userPreName,\r\n        fname: userFirstName,\r\n        lname: userLastName,\r\n        cid: userIDCard,\r\n        an: userAN,\r\n        hn: userHN,\r\n        vn: userVN,\r\n        bedno: userBedNumber,\r\n        regdate: userRegDate,\r\n        dchdate_plan: userDchPlanDate,\r\n        weight: userWeight,\r\n        height: userHeight,\r\n        phone: userPhone,\r\n        created_date: \"\",\r\n      };\r\n\r\n      let formDataUserEvaluation = {\r\n        evaluation_id: roundAssessment,\r\n        user_id: userId,\r\n        user_evaluation_date: dateAssessment,\r\n        user_evaluation_sys: userSYS,\r\n        user_evaluation_dia: userDIA,\r\n        user_evaluation_pr: userPR,\r\n        user_evaluation_temp: userEvaluationTemp,\r\n        user_evaluation_oxygen: userEvaluationOxygen,\r\n        user_evaluation_cough: evaluationCough,\r\n        user_evaluation_phlegm: evaluationPhlegm,\r\n        user_evaluation_gasp: evaluationGasp,\r\n        user_evaluation_taste: evaluationTaste,\r\n        user_evaluation_muscle: evaluationMuscle,\r\n        user_evaluation_liquid: evaluationLiquid,\r\n        user_evaluation_rash: evaluationRash,\r\n        user_evaluation_fever: evaluationFever,\r\n        user_evaluation_snot: evaluationSnot,\r\n        user_evaluation_redeye: evaluationRedEye,\r\n        user_evaluation_tired: evaluationTired,\r\n        created_date: \"\",\r\n      };\r\n      // console.log({\r\n      //   formDataUser: formDataUser,\r\n      //   formDataUserEvaluation: formDataUserEvaluation,\r\n      // });\r\n      const base_url = `${config.main_config.APP_URL}/saveData`;\r\n      axios\r\n        .post(base_url, {\r\n          formDataUser: formDataUser,\r\n          formDataUserEvaluation: formDataUserEvaluation,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.status_code === 200) {\r\n            Swal.fire({\r\n              title: res.data.msg,\r\n              text: \"ขอบคุณค่ะ\",\r\n              showDenyButton: false,\r\n              showCancelButton: false,\r\n              confirmButtonText: `ตกลง`,\r\n              icon: res.data.type,\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                // liff.closeWindow();\r\n              }\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"เกิดข้อผิดพลาด\",\r\n              text: JSON.stringify(res.data.msg),\r\n              icon: res.data.type,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          const error_code = \"Network\";\r\n          if ((\"\" + error).indexOf(error_code) > -1) {\r\n            Swal.fire({\r\n              title: \"Can't connect service!\",\r\n              text: \"Please try again.\",\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Error\",\r\n              text: \"\" + error,\r\n              icon: \"error\",\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      Swal.fire({\r\n        title: \"แจ้งเตือน\",\r\n        text: \"กรุณาตรวจสอบเลขบัตรประชาชน ก่อนบันทึกข้อมูล\",\r\n        icon: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const InitailizeLiff = () => {\r\n    liff.init(\r\n      {\r\n        liffId: \"1655908292-5Y1rqwK3\",\r\n      },\r\n      () => {\r\n        if (liff.isLoggedIn()) {\r\n          liff.getProfile().then((profile) => {\r\n            Toast.fire({\r\n              icon: \"success\",\r\n              title: \"Login successfuly\",\r\n            });\r\n            setUserID(profile.userId);\r\n          });\r\n        } else {\r\n          Toast.fire({\r\n            icon: \"error\",\r\n            title: \"No login!\",\r\n          });\r\n        }\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    InitailizeLiff();\r\n  }, []);\r\n  return (\r\n    <div className=\"flyout\">\r\n      <img src={Banner} alt=\"โรงพยาบาลสนามร้อยเอ็ด\" />\r\n      <div className=\"ml-2 mr-2 mb-3\" style={{ marginTop: \"118px\" }}>\r\n        <MDBAnimation type=\"zoomIn\" duration=\"500ms\">\r\n          <MDBFreeBird>\r\n            <MDBRow>\r\n              <MDBCol\r\n                md=\"12\"\r\n                className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\r\n              >\r\n                <MDBCardBody>\r\n                  <MDBCol md=\"12\">\r\n                    <div className=\"blue-text\">\r\n                      <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                          <h5\r\n                            className=\"text-center font-weight-bold blue lighten-5 py-2\"\r\n                            style={{ borderRadius: \"20px\" }}\r\n                          >\r\n                            ข้อมูลผู้ประเมิน\r\n                          </h5>\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                    </div>\r\n                    <form className=\"needs-validation\" onSubmit={submitHandler}>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                          <label className=\"grey-text\">\r\n                            เลขบัตรประชาชน\r\n                            <span className=\"text-danger ml-1\">*</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"เลขบัตรประชาชน\"\r\n                            value={userIDCard}\r\n                            onKeyDown={keyPress}\r\n                            onChange={(val) => {\r\n                              handleSearch(val);\r\n                            }}\r\n                            required\r\n                          />\r\n                          <small className=\"text-warning pl-2\">\r\n                            กรุณากดปุ่มตรวจสอบหลังบันทึกเลขบัตรประชาชน\r\n                          </small>\r\n                          <br />\r\n                          <MDBBtn\r\n                            color=\"primary\"\r\n                            className=\"mt-1 mb-3\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleOnClickSearch(userIDCard)}\r\n                          >\r\n                            ตรวจสอบ\r\n                          </MDBBtn>\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"8\">\r\n                          <label className=\"grey-text\">\r\n                            เบอร์โทร\r\n                            <span className=\"text-danger ml-1\">*</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control mb-3 col-8\"\r\n                            onChange={(v) => setUserPhone(v.target.value)}\r\n                            value={userPhone}\r\n                            placeholder=\"กรุณาระบุเบอร์โทร\"\r\n                            maxLength=\"10\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol className=\"col-6\">\r\n                          <label className=\"grey-text\">\r\n                            น้ำหนัก (กก.)\r\n                            <span className=\"text-danger ml-1\">*</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control mb-3 col-12\"\r\n                            onChange={(v) => setUserWeight(v.target.value)}\r\n                            value={userWeight}\r\n                            placeholder=\"น้ำหนัก\"\r\n                            maxLength=\"5\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol className=\"col-6\">\r\n                          <label className=\"grey-text\">\r\n                            ส่วนสูง (ซม.)\r\n                            <span className=\"text-danger ml-1\">*</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control mb-3 col-12\"\r\n                            onChange={(v) => setUserHeight(v.target.value)}\r\n                            value={userHeight}\r\n                            placeholder=\"ส่วนสูง\"\r\n                            maxLength=\"3\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol className=\"col-12\">\r\n                          {isData && (\r\n                            <div>\r\n                              <label className=\"grey-text mr-3\">\r\n                                เลขบัตรประชาชน\r\n                              </label>\r\n                              <strong>{userIDCard}</strong>\r\n                              <br />\r\n                              <label className=\"grey-text mr-3\">HN</label>\r\n                              <strong>{userHN}</strong>\r\n                              <br />\r\n                              <label className=\"grey-text mr-3\">\r\n                                ชื่อ - นามสกุล\r\n                              </label>\r\n                              <strong>{`${userPreName}${userFirstName} ${userLastName}`}</strong>\r\n                              <br />\r\n                              <label className=\"grey-text mr-3\">\r\n                                หมายเลขเตียง\r\n                              </label>\r\n                              <strong>{`${userBedNumber}`}</strong>\r\n                            </div>\r\n                          )}\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <hr />\r\n                      <div className=\"blue-text\">\r\n                        <MDBRow>\r\n                          <MDBCol md=\"12\">\r\n                            <h5\r\n                              className=\"text-center font-weight-bold blue lighten-5 py-2\"\r\n                              style={{ borderRadius: \"20px\" }}\r\n                            >\r\n                              ฟอร์มประเมิน\r\n                            </h5>\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                      </div>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"12\" className=\"mb-3\">\r\n                          {/* {dateAssessment} */}\r\n                          <label className=\"grey-text\">\r\n                            วันที่ประเมิน\r\n                            <span className=\"text-danger ml-1\">*</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"date\"\r\n                            name=\"regis_date\"\r\n                            className=\"form-control\"\r\n                            onChange={(v) => setDateAssessment(v.target.value)}\r\n                            value={dateAssessment}\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"12\" className=\"mb-3\">\r\n                          <label className=\"grey-text\">\r\n                            รอบประเมิน\r\n                            <span className=\"text-danger ml-1\">*</span>\r\n                          </label>\r\n                          <div>\r\n                            {/* {roundAssessment} */}\r\n                            <div className=\"custom-control custom-checkbox mb-2 \">\r\n                              <input\r\n                                type=\"radio\"\r\n                                className=\"custom-control-input\"\r\n                                id=\"evaluation1\"\r\n                                name=\"evaluation\"\r\n                                value=\"1\"\r\n                                onChange={(v) =>\r\n                                  setRoundAssessment(v.target.value)\r\n                                }\r\n                              />\r\n                              <label\r\n                                className=\"custom-control-label\"\r\n                                for=\"evaluation1\"\r\n                              >\r\n                                รอบที่ 1 เวลา 07.00 - 08.30 น.\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                              <input\r\n                                type=\"radio\"\r\n                                className=\"custom-control-input\"\r\n                                id=\"evaluation2\"\r\n                                name=\"evaluation\"\r\n                                value=\"2\"\r\n                                onChange={(v) =>\r\n                                  setRoundAssessment(v.target.value)\r\n                                }\r\n                              />\r\n                              <label\r\n                                className=\"custom-control-label\"\r\n                                for=\"evaluation2\"\r\n                              >\r\n                                รอบที่ 2 เวลา 14.00 - 15.00 น.\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"8\">\r\n                          <label className=\"blue-text\">SYS (mmHg)</label>\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control mb-3 col-8\"\r\n                            onChange={(v) => setUserSYS(v.target.value)}\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"8\">\r\n                          <label className=\"blue-text\">DIA (mmHg)</label>\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control mb-3 col-8\"\r\n                            onChange={(v) => setUserDIA(v.target.value)}\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"8\">\r\n                          <label className=\"blue-text\">PR (bpm)</label>\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control mb-3 col-8\"\r\n                            onChange={(v) => setUserPR(v.target.value)}\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"8\">\r\n                          <label className=\"blue-text\">%SpO2</label>\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control col-8\"\r\n                            onChange={(v) => {\r\n                              setUserEvaluationOxygen(v.target.value);\r\n                            }}\r\n                          />\r\n                          <small className=\"orange-text\">\r\n                            ค่าออกซิเจนในเลือด ค่าสุงสุดไม่เกิน 100\r\n                          </small>\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"8\">\r\n                          <label className=\"blue-text\">\r\n                            อุณหภูมิร่างกาย ( ํC) ตัวอย่าง 36.5\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control mb-3 col-8\"\r\n                            onChange={(v) =>\r\n                              setUserEvaluationTemp(v.target.value)\r\n                            }\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"8\" className=\"mt-4\">\r\n                          <label className=\"blue-text\">\r\n                            ท่านมีอาการเหล่านี้หรือไม่\r\n                          </label>\r\n                          <div className=\"custom-control custom-switch mb-2\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"custom-control-input\"\r\n                              id=\"user_evaluation_fever\"\r\n                              name=\"user_evaluation_fever\"\r\n                              onClick={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setEvaluationFever(1);\r\n                                } else {\r\n                                  setEvaluationFever(0);\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              for=\"user_evaluation_fever\"\r\n                            >\r\n                              {evaluationFever === 1 ? (\r\n                                <small className=\"pr-3 blue-text\">มี</small>\r\n                              ) : (\r\n                                <small className=\"pr-3 grey-text\">ไม่มี</small>\r\n                              )}\r\n                              มีไข้\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"custom-control custom-switch mb-2\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"custom-control-input\"\r\n                              id=\"user_evaluation_cough\"\r\n                              name=\"user_evaluation_cough\"\r\n                              onClick={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setEvaluationCough(1);\r\n                                } else {\r\n                                  setEvaluationCough(0);\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              for=\"user_evaluation_cough\"\r\n                            >\r\n                              {evaluationCough === 1 ? (\r\n                                <small className=\"pr-3 blue-text\">มี</small>\r\n                              ) : (\r\n                                <small className=\"pr-3 grey-text\">ไม่มี</small>\r\n                              )}\r\n                              ไอ\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"custom-control custom-switch mb-2\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"custom-control-input\"\r\n                              id=\"user_evaluation_phlegm\"\r\n                              name=\"user_evaluation_phlegm\"\r\n                              onClick={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setEvaluationPhlegm(1);\r\n                                } else {\r\n                                  setEvaluationPhlegm(0);\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              for=\"user_evaluation_phlegm\"\r\n                            >\r\n                              {evaluationPhlegm === 1 ? (\r\n                                <small className=\"pr-3 blue-text\">มี</small>\r\n                              ) : (\r\n                                <small className=\"pr-3 grey-text\">ไม่มี</small>\r\n                              )}\r\n                              มีเสมหะ\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"custom-control custom-switch mb-2\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"custom-control-input\"\r\n                              id=\"user_evaluation_gasp\"\r\n                              name=\"user_evaluation_gasp\"\r\n                              onClick={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setEvaluationGasp(1);\r\n                                } else {\r\n                                  setEvaluationGasp(0);\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              for=\"user_evaluation_gasp\"\r\n                            >\r\n                              {evaluationGasp === 1 ? (\r\n                                <small className=\"pr-3 blue-text\">มี</small>\r\n                              ) : (\r\n                                <small className=\"pr-3 grey-text\">ไม่มี</small>\r\n                              )}\r\n                              หอบเหนื่อย\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"custom-control custom-switch mb-2\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"custom-control-input\"\r\n                              id=\"user_evaluation_taste\"\r\n                              name=\"user_evaluation_taste\"\r\n                              onClick={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setEvaluationTaste(1);\r\n                                } else {\r\n                                  setEvaluationTaste(0);\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              for=\"user_evaluation_taste\"\r\n                            >\r\n                              {evaluationTaste === 1 ? (\r\n                                <small className=\"pr-3 blue-text\">มี</small>\r\n                              ) : (\r\n                                <small className=\"pr-3 grey-text\">ไม่มี</small>\r\n                              )}\r\n                              ไม่ได้กลิ่น / รับรส\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"custom-control custom-switch mb-2\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"custom-control-input\"\r\n                              id=\"user_evaluation_muscle\"\r\n                              name=\"user_evaluation_muscle\"\r\n                              onClick={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setEvaluationMuscle(1);\r\n                                } else {\r\n                                  setEvaluationMuscle(0);\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              for=\"user_evaluation_muscle\"\r\n                            >\r\n                              {evaluationMuscle === 1 ? (\r\n                                <small className=\"pr-3 blue-text\">มี</small>\r\n                              ) : (\r\n                                <small className=\"pr-3 grey-text\">ไม่มี</small>\r\n                              )}\r\n                              ปวดกล้ามเนื้อ\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"custom-control custom-switch mb-2\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"custom-control-input\"\r\n                              id=\"user_evaluation_liquid\"\r\n                              name=\"user_evaluation_liquid\"\r\n                              onClick={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setEvaluationLiquid(1);\r\n                                } else {\r\n                                  setEvaluationLiquid(0);\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              for=\"user_evaluation_liquid\"\r\n                            >\r\n                              {evaluationLiquid === 1 ? (\r\n                                <small className=\"pr-3 blue-text\">มี</small>\r\n                              ) : (\r\n                                <small className=\"pr-3 grey-text\">ไม่มี</small>\r\n                              )}\r\n                              ถ่ายเหลว\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"custom-control custom-switch mb-2\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"custom-control-input\"\r\n                              id=\"user_evaluation_rash\"\r\n                              name=\"user_evaluation_rash\"\r\n                              onClick={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setEvaluationRash(1);\r\n                                } else {\r\n                                  setEvaluationRash(0);\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              for=\"user_evaluation_rash\"\r\n                            >\r\n                              {evaluationRash === 1 ? (\r\n                                <small className=\"pr-3 blue-text\">มี</small>\r\n                              ) : (\r\n                                <small className=\"pr-3 grey-text\">ไม่มี</small>\r\n                              )}\r\n                              ผื่น\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"custom-control custom-switch mb-2\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"custom-control-input\"\r\n                              id=\"user_evaluation_snot\"\r\n                              name=\"user_evaluation_snot\"\r\n                              onClick={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setEvaluationSnot(1);\r\n                                } else {\r\n                                  setEvaluationSnot(0);\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              for=\"user_evaluation_snot\"\r\n                            >\r\n                              {evaluationSnot === 1 ? (\r\n                                <small className=\"pr-3 blue-text\">มี</small>\r\n                              ) : (\r\n                                <small className=\"pr-3 grey-text\">ไม่มี</small>\r\n                              )}\r\n                              มีน้ำมูก\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"custom-control custom-switch mb-2\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"custom-control-input\"\r\n                              id=\"user_evaluation_redeye\"\r\n                              name=\"user_evaluation_redeye\"\r\n                              onClick={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setEvaluationRedEye(1);\r\n                                } else {\r\n                                  setEvaluationRedEye(0);\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              for=\"user_evaluation_redeye\"\r\n                            >\r\n                              {evaluationRedEye === 1 ? (\r\n                                <small className=\"pr-3 blue-text\">มี</small>\r\n                              ) : (\r\n                                <small className=\"pr-3 grey-text\">ไม่มี</small>\r\n                              )}\r\n                              ตาแดง\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"custom-control custom-switch mb-2\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"custom-control-input\"\r\n                              id=\"user_evaluation_tired\"\r\n                              name=\"user_evaluation_tired\"\r\n                              onClick={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setEvaluationTired(1);\r\n                                } else {\r\n                                  setEvaluationTired(0);\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              for=\"user_evaluation_tired\"\r\n                            >\r\n                              {evaluationTired === 1 ? (\r\n                                <small className=\"pr-3 blue-text\">มี</small>\r\n                              ) : (\r\n                                <small className=\"pr-3 grey-text\">ไม่มี</small>\r\n                              )}\r\n                              อ่อนเพลีย\r\n                            </label>\r\n                          </div>\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <hr />\r\n                      <MDBBtn color=\"info\" type=\"submit\" className=\"mt-4\">\r\n                        บันทึก\r\n                      </MDBBtn>\r\n                    </form>\r\n                  </MDBCol>\r\n                </MDBCardBody>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBFreeBird>\r\n        </MDBAnimation>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={RegisterPage} />\r\n        <Route exact path=\"/hospitel-reh-app\" component={RegisterPage} />\r\n        <Route\r\n          render={function () {\r\n            return (\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"error-template\">\r\n                      <h1>Oops!</h1>\r\n                      <h2>404 Not Found</h2>\r\n                      <div className=\"error-details\">\r\n                        Sorry, an error has occured, Requested page not found!\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  MDBFooter,\r\n  MDBContainer,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport Routes from \"./Routes\";\r\nconst pkgVersion = require(\"../package.json\").version;\r\n\r\n// import Chrome from \"./assets/images/Google-Chrome-icon.png\";\r\n// import Edge from \"./assets/images/edge-icon.png\";\r\n// import Firefox from \"./assets/images/Firefox-icon.png\";\r\n// import Safari from \"./assets/images/safari-icon.png\";\r\n// import IE from \"./assets/images/Internet-Explorer-icon.png\";\r\n// const pkgVersion = require(\"../package.json\").version;\r\n// import Banner from \"./assets/images/banner_register.png\";\r\nclass App extends Component {\r\n  state = {\r\n    collapseID: \"\",\r\n    modal: localStorage.getItem(\"isNoShow\")\r\n      ? JSON.parse(localStorage.getItem(\"isNoShow\"))\r\n      : true,\r\n    isShow: false,\r\n    isAdmin: false,\r\n  };\r\n\r\n  toggleCollapse = (collapseID) => () =>\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\",\r\n    }));\r\n\r\n  closeCollapse = (collID) => () => {\r\n    const { collapseID } = this.state;\r\n    window.scrollTo(0, 0);\r\n    collapseID === collID && this.setState({ collapseID: \"\" });\r\n  };\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n\r\n  handleCheckBox = (event) => {\r\n    if (event.target.checked) {\r\n      localStorage.setItem(\"isNoShow\", JSON.stringify(!event.target.checked));\r\n    }\r\n  };\r\n  checkAdmin = () => {\r\n    let isAdmin = localStorage.getItem(\"isAdmin\");\r\n    if (isAdmin) {\r\n      window.location = \"#/reh-risk/showdata\";\r\n    } else {\r\n      localStorage.removeItem(\"isAdmin\");\r\n      Swal.fire({\r\n        title: \"กรอกรหัสผ่านสำหรับเจ้าหน้าที่\",\r\n        input: \"password\",\r\n        inputAttributes: {\r\n          autocapitalize: \"off\",\r\n        },\r\n        showCancelButton: true,\r\n        confirmButtonText: \"ตกลง\",\r\n        showLoaderOnConfirm: true,\r\n        preConfirm: (login) => {\r\n          return login === \"QCC@101\"\r\n            ? true\r\n            : Swal.showValidationMessage(`รหัสผ่านสำหรับเจ้าหน้าที่ไม่ถูกต้อง`);\r\n        },\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          localStorage.setItem(\"isAdmin\", true);\r\n          window.location = \"#/reh-risk/showdata\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    let is_admin = localStorage.getItem(\"isAdmin\");\r\n    if (is_admin) {\r\n      this.setState({\r\n        isAdmin: true,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const overlay = (\r\n      <div\r\n        id=\"sidenav-overlay\"\r\n        style={{ backgroundColor: \"transparent\" }}\r\n        onClick={this.toggleCollapse(\"mainNavbarCollapse\")}\r\n      />\r\n    );\r\n\r\n    const { collapseID } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"flyout teal accent-4\">\r\n          <main>\r\n            <Routes />\r\n          </main>\r\n          <MDBFooter className=\"font-small elegant-color-dark\">\r\n            <div className=\"footer-copyright text-center py-3\">\r\n              <MDBContainer fluid>\r\n              {`v.${pkgVersion}`}\r\n                &copy; {new Date().getFullYear()} Copyright{\" \"}\r\n                <a href=\"http://reh.go.th\" rel=\"noopener\">\r\n                  {\" \"}\r\n                  โรงพยาบาลร้อยเอ็ด\r\n                </a>\r\n                <a href=\"tel:043518200\" className=\"ml-3\">\r\n                  โทร.\r\n                <MDBIcon icon=\"phone-alt\" className=\"text-white ml-2 mr-1\"/>\r\n                043-518200 ต่อ 9000\r\n                </a>\r\n              </MDBContainer>\r\n            </div>\r\n          </MDBFooter>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();","exports.main_config = {\r\n  APP_URL: \"https://api-reh-1meeting-forward.herokuapp.com/hospitel\",\r\n};\r\n\r\n// exports.main_config = {\r\n//   APP_URL: \"http://localhost:8090/hospitel\",\r\n// };\r\n","module.exports = __webpack_public_path__ + \"static/media/banner_register.7f718e64.png\";"],"sourceRoot":""}